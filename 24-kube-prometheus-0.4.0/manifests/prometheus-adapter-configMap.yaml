apiVersion: v1
data:
  config.yaml: |
    #rules:
    #  default: false
    #  custom:
    #  - seriesQuery: 'http_requests_total{namespace!="",pod!=""}'
    #    resources:
    #      overrides:
    #        namespace: {resource: "namespace"}
    #        pod: {resource: "pod"}
    #    name:
    #      matches: "^(.*)_total"
    #      as: "${1}_per_second" # PromQL 计算出来的 QPS 指标， 也可写成 http_requests_qps
    #    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
    #  prometheus:
    #    url: http://prometheus-k8s.monitoring.svc.cluster.local # 替换 Prometheus API 的地址 (不写端口)
    #    port: 9090

    resourceRules:
      cpu:
        containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!="POD",container!="",pod!=""}[5m])) by (<<.GroupBy>>)
        nodeQuery: sum(1 - rate(node_cpu_seconds_total{mode="idle"}[5m]) * on(namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}) by (<<.GroupBy>>)
        resources:
          overrides:
            node:
              resource: node
            namespace:
              resource: namespace
            pod:
              resource: pod
        containerLabel: container
      memory:
        containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,container!="POD",container!="",pod!=""}) by (<<.GroupBy>>)
        nodeQuery: sum(node_memory_MemTotal_bytes{job="node-exporter",<<.LabelMatchers>>} - node_memory_MemAvailable_bytes{job="node-exporter",<<.LabelMatchers>>}) by (<<.GroupBy>>)
        resources:
          overrides:
            instance:
              resource: node
            namespace:
              resource: namespace
            pod:
              resource: pod
        containerLabel: container
      window: 5m
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: monitoring
